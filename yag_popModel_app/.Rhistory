nNestlings = seedNestlings
)
for(i in 2:length(outList)){
scenario <-
sample_n(scenarioFrame, 1)
generation <- i-1
surviveM <-
model_survival(
nAdult = outList[[i-1]]$nAdults,
adultModifier = scenario$adultSurv,
nNestlings = outList[[i-1]]$nNestlings,
nestlingModifier = scenario$juvSurv,
fecundity = scenario$fecundity
)
# }
outList[[i]] <-
bind_cols(
generation = generation,
scenario = scenario$scenario,
surviveM
)
}
bind_rows(outList)
}
# scenario frame, natural system ------------------------------------------
scenarioFrame_natural <-
data_frame(
id = c(1:8),
scenario = c(
'fire',
'storm',
'lotsa-bugs',
'lotsa-bugs',
'plenty-o-shrubs',
'plenty-o-shrubs',
'natural-predators',
'natural-predators'),
juvSurv = c(0.0,0.0,.3,.3,.15,.15,.1,.1),
adultSurv = c(.9,.9,.7,.7,.75,.75,.7,.7),
fecundity = rep(2, 8)
)
# scenario frame, anthropogenic system ------------------------------------------
scenarioFrame_anthropogenic <-
data_frame(
id = c(1:8),
scenario = c(
'cats',
'bad-lawns',
'pesticide',
'new-plants',
'collisions',
'cats',
'disease',
'pollution'),
juvSurv = c(0.05, 0.1, .1, .1, .1, 0.05, 0.1, .1),
adultSurv = c(.3, .5, .6, .75, .6, .3, .5, .5),
fecundity = c(2,2,2,2,2,2,2,2)
)
# scenario frame, conservation --------------------------------------------
scenarioFrame_conservation <-
data_frame(
id = c(1:8),
scenario = c(
'cats_inside',
'mowing-less',
'insect-solution',
'local-plants',
'window-stickers',
'cats_inside',
'clean-feeders',
'pollution-solution'),
juvSurv = c(.15, .2, .2, .2, .15, .15, .15, .15),
adultSurv = c(.75, .75, .75, .75, .7, .75, .75, .75),
fecundity = c(2,2,2,2,2,2,2,2)
)
scenarioList <-
list(
natural = scenarioFrame_natural,
anthropogenic = scenarioFrame_anthropogenic,
conservation = scenarioFrame_conservation
)
# function to run multiple simulations ------------------------------------
simMultiple <-
function(
scenarioFrame,
nGen,
nSim){
simulationList <-
vector('list', length = nSim)
for(i in 1:length(simulationList)){
simFrame <-
runModels(scenarioFrame,nGenerations = nGen,
seedAdults = 10, seedNestlings = 0)
simulationList[[i]] <-
bind_cols(sim = rep(i, nGen),
simFrame)
}
bind_rows(simulationList)
}
# one model run with scenario ---------------------------------------------
runModel <-
function(
scenarioFrame,
generation,
nAdults,
nNestlings,
anthropogenic
){
scenario <- sample_n(scenarioFrame, 1)
survivalOutput <-
model_survival(
nAdult = nAdults,
adultModifier = scenario$adultSurv,
nNestlings = nNestlings,
nestlingModifier = scenario$juvSurv,
fecundity = scenario$fecundity,
anthropogenic
)
bind_cols(
generation = generation,
scenario = scenario$scenario,
survivalOutput
)
}
scenarioList$natural
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# function to model survival ----------------------------------------------
model_survival <-
function(
nAdult,
adultModifier,
nNestlings,
nestlingModifier,
fecundity
){
adultsDied <-
(nAdult*(1-adultModifier)) %>%
floor
adultsNew <-
(nNestlings*nestlingModifier) %>%
floor
adultsT <- nAdult - adultsDied + adultsNew
nestlingsT <-
adultsT*fecundity %>%
floor
return(
data.frame(
newAdults = adultsNew,
adultsDied = adultsDied,
nAdults = adultsT,
nNestlings = nestlingsT
)
)
}
# function to run simulations ---------------------------------------------
runModels <-
function(
scenarioFrame,
nGenerations,
seedAdults = 10,
seedNestlings = 0
){
outList <-
vector('list', length = nGenerations)
outList[[1]] <-
data_frame(
generation = 0,
scenario = 'colonization',
nAdults = seedAdults,
nNestlings = seedNestlings
)
for(i in 2:length(outList)){
scenario <-
sample_n(scenarioFrame, 1)
generation <- i-1
surviveM <-
model_survival(
nAdult = outList[[i-1]]$nAdults,
adultModifier = scenario$adultSurv,
nNestlings = outList[[i-1]]$nNestlings,
nestlingModifier = scenario$juvSurv,
fecundity = scenario$fecundity
)
# }
outList[[i]] <-
bind_cols(
generation = generation,
scenario = scenario$scenario,
surviveM
)
}
bind_rows(outList)
}
# scenario frame, natural system ------------------------------------------
scenarioFrame_natural <-
data_frame(
id = c(1:8),
scenario = c(
'fire',
'storm',
'lotsa-bugs',
'lotsa-bugs',
'plenty-o-shrubs',
'plenty-o-shrubs',
'natural-predators',
'natural-predators'),
juvSurv = c(0.0,0.0,.3,.3,.15,.15,.1,.1),
adultSurv = c(.9,.9,.7,.7,.75,.75,.7,.7),
fecundity = rep(2, 8)
) %>%
select(scenario:fecundity) %>%
distinct
# scenario frame, anthropogenic system ------------------------------------------
scenarioFrame_anthropogenic <-
data_frame(
id = c(1:8),
scenario = c(
'cats',
'bad-lawns',
'pesticide',
'new-plants',
'collisions',
'cats',
'disease',
'pollution'),
juvSurv = c(0.05, 0.1, .1, .1, .1, 0.05, 0.1, .1),
adultSurv = c(.3, .5, .6, .75, .6, .3, .5, .5),
fecundity = c(2,2,2,2,2,2,2,2)
) %>%
select(scenario:fecundity) %>%
distinct
# scenario frame, conservation --------------------------------------------
scenarioFrame_conservation <-
data_frame(
id = c(1:8),
scenario = c(
'cats_inside',
'mowing-less',
'insect-solution',
'local-plants',
'window-stickers',
'cats_inside',
'clean-feeders',
'pollution-solution'),
juvSurv = c(.15, .2, .2, .2, .15, .15, .15, .15),
adultSurv = c(.75, .75, .75, .75, .7, .75, .75, .75),
fecundity = c(2,2,2,2,2,2,2,2)
) %>%
select(scenario:fecundity) %>%
distinct
scenarioList <-
list(
natural = scenarioFrame_natural,
anthropogenic = scenarioFrame_anthropogenic,
conservation = scenarioFrame_conservation
)
# function to run multiple simulations ------------------------------------
simMultiple <-
function(
scenarioFrame,
nGen,
nSim){
simulationList <-
vector('list', length = nSim)
for(i in 1:length(simulationList)){
simFrame <-
runModels(scenarioFrame,nGenerations = nGen,
seedAdults = 10, seedNestlings = 0)
simulationList[[i]] <-
bind_cols(sim = rep(i, nGen),
simFrame)
}
bind_rows(simulationList)
}
# one model run with scenario ---------------------------------------------
runModel <-
function(
scenarioFrame,
generation,
nAdults,
nNestlings,
anthropogenic
){
scenario <- sample_n(scenarioFrame, 1)
survivalOutput <-
model_survival(
nAdult = nAdults,
adultModifier = scenario$adultSurv,
nNestlings = nNestlings,
nestlingModifier = scenario$juvSurv,
fecundity = scenario$fecundity,
anthropogenic
)
bind_cols(
generation = generation,
scenario = scenario$scenario,
survivalOutput
)
}
scenarioList
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
model_survival(nAdult = 10, adultModifier = .9, nNestlings = 0, nestlingModifier = 1, fecundity = 2)
scenarioList$natural
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
model_survival(
nAdult = 10,
adultModifier = scenario$adultSurv,
nNestlings = 0,
nestlingModifier = scenario$juvSurv,
fecundity = 2
)
View(scenarioFrame_conservation)
scenario <- scenarioFrame_conservation[1,]
model_survival(
nAdult = 10,
adultModifier = scenario$adultSurv,
nNestlings = 0,
nestlingModifier = scenario$juvSurv,
fecundity = 2
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
scenarioList
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
bind_rows(data_frame(a = c(1,2)), NULL
)
scenarioFrame_natural
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?actionButton
runApp()
runApp()
runApp()
sample(0,1)
sample(0,1)
sample(0,1)
sample(0,1)
sample(c(0,1), 1)
sample(c(0,1), 1)
sample(c(0,1), 1)
sample(c(0,1), 1)
sample(c(0,1), 1)
sample(c(0,1), 1)
sample(c(0,1), 1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data_frame(
id = c(1:8),
scenario = c(
'bad-lawns',
'new-plants',
'collisions',
'cats',
'disease',
'pollution'),
juvSurv = c(0.1,.1, .15, 0.05, 0.1, .1),
adultSurv = c(.5,.75, .6, .3, .5, .6),
fecundity = c(2,2,2,2,2,2)
) %>%
select(scenario:fecundity) %>%
distinct
data_frame(
id = c(1:6),
scenario = c(
'bad-lawns',
'new-plants',
'collisions',
'cats',
'disease',
'pollution'),
juvSurv = c(0.1,.1, .15, 0.05, 0.1, .1),
adultSurv = c(.5,.75, .6, .3, .5, .6),
fecundity = c(2,2,2,2,2,2)
) %>%
select(scenario:fecundity) %>%
distinct
data_frame(
id = c(1:5),
scenario = c(
'fire',
'storm',
'lotsa-bugs',
'plenty-o-shrubs',
'natural-predators'),
juvSurv = c(0.0,0.0,.3,.15,.1),
adultSurv = c(.85,.85,.7,.75,.7),
fecundity = rep(2, 5)
) %>%
select(scenario:fecundity) %>%
distinct
data_frame(
id = c(1:7),
scenario = c(
'mowing-less',
'insect-solution',
'local-plants',
'window-stickers',
'cats_inside',
'clean-feeders',
'pollution-solution'),
juvSurv = c(.2, .2, .2, .15, .15, .15, .15),
adultSurv = c(.75, .75, .75, .7, .75, .75, .75),
fecundity = c(2,2,2,2,2,2,2)
) %>%
select(scenario:fecundity) %>%
distinct
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?renderDataTable
runApp()
runApp()
runApp()
runApp()
get_mongoData('visits')
